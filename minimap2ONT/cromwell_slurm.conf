# This is a config file to be used when submitting cromwell/WDL workflows to slurm

# The runtime variables below are:
# -J ${job_title} = The name of the job that will appear when using squeue
# -o ${slurm_out} = The location of the slurm_#.out file (set as /path/to/desired/directory/slurm-%A_%a.out for array based jobs, or slurm-%j.out for regular jobs)
# -A ${alloc} = Sets which resource allocation that the job will be submitted under 
# -p ${queue} = Sets which partition the job will be submitted to
# -N ${ndoes} = Specifies the number of nodes required for a job
# -n ${cores} = Specifies the number of cores to be used
# --time=${time} = Specifies how long the job will be allowed to run for (format: days-hours:minutes:seconds)
# --mem-per-cpu=${requested_memory_mb_per_core} = Specifies the memory required per core in mb
# --mail-user=${email} = user email address for SLURM updates


#Sets config values not specified here to the default config settings which are outlined in applications.conf
include required(classpath("application"))

backend {
  default = slurm
    
    providers {
      slurm {
        actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
        config {

          run-in-background = false
	
				root = "workdir"

				filesystems {
					local {
						localization : ["copy", "hard-link", "soft-link"]
						caching {
							duplication-strategy: ["copy", "hard-link", "soft-link"]
							hashing-strategy: "file"
                                                }
                                        }
                                }


          runtime-attributes = """
          String? job_title
          String? slurm_out
          String alloc = "robinson"
          String? queue
          Int? nodes
          Int? cores
          String? time
          Int? requested_memory_mb_per_core
          String? email
          """

          submit = """
            sbatch \
            -J ${job_title} \
            -o ${slurm_out} \
            -A ${alloc} \
            -p ${queue} \
            -N ${nodes} \
            -n ${cores} \
            --time=${time} \
            --mem-per-cpu "${requested_memory_mb_per_core}GB" \
            --mail-type="END"
            --mail-type="FAIL"
            --mail-user=${email}
            --wrap "bash ${script}"
          """
          kill = "scancel ${job_id}"
          check-alive = "squeue -j ${job_id}"
          job-id-regex = "Submitted batch job (\\d+).*"
        }
      }
    }
}
